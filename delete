private void process(DatagramPacket packet){
		// If TC/RCDB (database)
		byte[] data = packet.getData();
		
		InetAddress address = packet.getAddress();
		int port = packet.getPort();
		
		dump(packet);
		
		if(new String(data, 0 ,4).equals("RCDB")){
			TCSDatabase database = TCSDatabase.Deserialize(data);
			process(database);
		}else if (data[0] == 0x40 && data[1] == 0x40){
			switch (data[2]) {
			case 1:
				clients.add(new ServerConnection(packet.getAddress(), packet.getPort()));
				System.out.println("THIS IS A CONNECTION PACKET!");
				break;
				
			case 2:
				ServerConnection[] cli = new ServerConnection[clients.size()];
				clients.toArray(cli);
				for(int i=0; i<clients.size(); i++){
					System.out.println("IP: " + cli[i].address + ":" + cli[i].port + " " + cli[i].status);
				}
				break;
				
			case 3:
				//Login Attempt Packet
				break;
				
			case 0x7F:
				//for(int i=0; i<clients.size(); i++){
				//	if (clients.getAddress() == packet.getAddress()){
						
				//	}
				//}
				//clients.remove(packet);
				System.out.println("I Want To Disconnect.");
				break;

			default:
				break;
			}
		}else if (data[0] == 0x69 && data[1] == 0x69){
			switch (data[2]) {
			//login
			case 1:
				processLogin(data);
				break;

			default:
				break;
			}
		}
	}
	
	private void process(TCSDatabase database){
		System.out.println("Recieved Database");
		dump(database);
	}
	
	private void dump(DatagramPacket packet){
		byte[] data  = packet.getData();
		InetAddress address = packet.getAddress();
		int port = packet.getPort();
		
		System.out.println("==========================================");
		System.out.println("PACKET: ");
		System.out.println("\t" + address.getHostAddress() + ":" + port);
		System.out.println("");
		System.out.println("\tContents:");
		System.out.print("\n\t\t");
		for(int i=0; i<packet.getLength(); i++){
			System.out.printf("%02x ", data[i]);
			if((i+1)%16==0){
				System.out.print("\n\t\t");
			}
		}
		System.out.println();
		System.out.println("==========================================");
		System.out.println();
	}
	
	private void dump(TCSDatabase database){
		
		byte[] arrayData = null;
		
		System.out.println("=========================================");
		System.out.println("\t\tKSDatabase");
		System.out.println("-----------------------------------------");
		System.out.println("Name: " + database.getName());
		System.out.println("Size: " + database.getSize());
		System.out.println("Object Count: " +  database.objects.size());
		System.out.println("");
		for(TCSObject object : database.objects){
			System.out.println("\tObject: ");
			System.out.println("\tName: " + object.getName());
			System.out.println("\tSize: " + object.getSize());
			System.out.println("");
			System.out.println("\tField Count: " +  object.fields.size());
			System.out.println("");
			for(TCSField field : object.fields){
				System.out.println("\t\tField: ");
				System.out.println("\t\tName: " + field.getName());
				System.out.println("\t\tSize: " + field.getSize());
				String data = "";
				switch(field.type){
				case Type.BYTE:
					data += field.getByte();
					break;
				case Type.SHORT:
					data += field.getShort();
					break;
				case Type.CHAR:
					data += field.getChar();
					break;
				case Type.INTEGER:
					data += field.getInt();
					break;
				case Type.LONG:
					data += field.getLong();
					break;
				case Type.FLOAT:
					data += field.getFloat();
					break;
				case Type.DOUBLE:
					data += field.getDouble();
					break;
				case Type.BOOLEAN:
					data += field.getBoolean();
					break;
				}
				System.out.println("\t\tData: " + data);
				System.out.println("");
			}
			for(TCSArray array : object.arrays){
				//arrayData = KSArray.Deserialize(array.data, 0);
				System.out.println("\t\tArray:");
				System.out.println("\t\tName: " + array.getName());
				System.out.println("\t\tSize: " + array.getSize());
				//System.out.println("\t\tData: " + arrayData.toString());
//				System.out.println(array.);
				System.out.println("");
			}
			System.out.println("");
		}
		System.out.println("=========================================");
		System.out.println("");
	}
	
	private void processLogin(byte[] data){
		System.out.println("-----START OF LOGIN INFO-----");
		
		int userLength = data[3];
		int passLength = data[4];
		
		byte[] userName = new byte[userLength];
		byte[] passWord = new byte[passLength];
		
		
		for(int i=0; i<userLength; i++){
			//3 for the header data
			userName[i] = data[i+3];
		}
		
		for(int i=0; i<passLength; i++){
			//3 for the header data
			passWord[i] = data[i+3+userLength];
		}
		
		
		System.out.println(userLength);
		System.out.println(passLength);
		System.out.println(passWord[0]);
		System.out.println(userName[0]);
		
		System.out.println("------END OF LOGIN INFO------");
	}
